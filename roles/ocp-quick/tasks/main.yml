---
  - name: enable the needed rhel repositories
    command: subscription-manager repos --enable={{ item }}
    with_items:
      - "{{ ocp.repos }}"
#  - name: Add Repos
#    yum_repository:
#      name: "{{ item.name }}"
#      file: ocp
#      description: "{{ item.description }}"
#      baseurl: "{{ item.baseurl }}"
#      gpgcheck: no
#      enabled: yes
#    with_items:
#      - name: 'rhel-7-server-extras-rpms'
#        description: 'RHEL 7 Extras'
#        baseurl: 'http://{{ repo_server_ip }}/repos/rhel-7-server-extras-rpms'
#      - name: 'rhel-7-server-rpms'
#        description: 'RHEL 7 Base'
#        baseurl: 'http://{{ repo_server_ip }}/repos/rhel-7-server-rpms'
#      - name: 'rhel-7-fast-datapath-rpms'
#        description: 'Fast datapath rpms'
#        baseurl: 'http://{{ repo_server_ip }}/repos/rhel-7-fast-datapath-rpms'
#      - name: 'rhel-7-server-ose-3.6-rpms'
#        description: 'OCP 3.6 rpms'
#        baseurl: 'http://{{ repo_server_ip }}/repos/rhel-7-server-ose-3.6-rpms'
  - name: Install necessary packages
    yum:  
      name: '{{ item }}'
      state: present
    with_items: 
    - wget 
    - git 
    - net-tools 
    - bind-utils 
    - iptables-services 
    - bridge-utils 
    - bash-completion 
    - kexec-tools 
    - sos 
    - psacct
    - atomic-openshift-utils
    - docker-1.12.6
    - ipa-client
    - httpd-tools
  - name: configure IPA client
    command: ipa-client-install --server='{{ ipa_server }}' --domain='{{ domain }}' --ip-address='{{ inventory_hostname }}' --hostname='{{ ansible_hostname }}'.'{{ domain }}' --principal='{{ ipa_user }}' --password='{{ ipa_password }}' --unattended
  - name: configure docker storage
    template:
      src: docker-storage-setup.j2
      dest: /etc/sysconfig/docker-storage-setup
      owner: root
      group: root
      mode: 0644
  - name: run docker storage setup
    command: docker-storage-setup
  - name: start and enable Docker
    service:
      name: docker
      state: started
      enabled: true

#  - name: download docker images for master
#    get_url:
#      url: http://{{ repo_server_ip }}/repos/ose3-builder-images.tar
#      dest: /root/ose3-builder-images.tar
#      mode: 0644
#    when: "'master' in group_names"

#  - name: load ose builder images on master
#    command: docker load -i /root/ose3-builder-images.tar
#    when: "'master' in group_names"

#  - name: download docker images for node
#    get_url:
#      url: http://{{ repo_server_ip }}/repos/ose3-images.tar
#      dest: /root/ose3-images.tar
#      mode: 0644
#    when: "'master' not in group_names"

#  - name: load ose images on nodes
#    command: docker load -i /root/ose3-images.tar
#    when: "'master' not in group_names"

#  - name: download docker extra images for node
#    get_url:
#      url: http://{{ repo_server_ip }}/repos/ose3-extra-images.tar
#      dest: /root/ose3-extra-images.tar
#      mode: 0644
#    when: "'master' not in group_names"

#  - name: load ose extra images on nodes
#    command: docker load -i /root/ose3-extra-images.tar
#    when: "'master' not in group_names"

#  - name: download docker logging and metrics images for node
#    get_url:
#      url: http://{{ repo_server_ip }}/repos/ose3-logging-metrics-images.tar
#      dest: /root/ose3-logging-metrics-images.tar
#      mode: 0644
#    when: "'master' not in group_names"

#  - name: load ose logging and metrics images on nodes
#    command: docker load -i /root/ose3-logging-metrics-images.tar
#    when: "'master' not in group_names"

  - name: Copy hoststemplate file
    template:
      src: hosts.j2
      dest: /etc/ansible/hosts
      owner: root
      group: root
      mode: 0644
    when: "'master' in group_names"

  - name: create ssh key on root account
    shell: 'ssh-keygen -b 2048 -t rsa -f {{ ansible_user_dir }}/.ssh/id_rsa -q -N ""'
    when: "'master' in group_names"

  - name: capture master public key
    shell: "cat {{ ansible_user_dir }}/.ssh/id_rsa.pub"
    when: "'master' in group_names"
    register: pubkey

  - debug:
      var: pubkey.stdout_lines

  - name: set the pubkey fact on the master
    set_fact:
      masterpubkey: "{{ pubkey.stdout }}"
    when: "'master' in group_names"

  - name: add key to authorized keys
    authorized_key:
      user: "{{ ssh_user }}"
      state: present
      key: "{{ hostvars[groups['master'][0]]['masterpubkey']  }}"

  - name: Install OpenShift unattended
    command: ansible-playbook  -i /etc/ansible/hosts -e 'host_key_checking=False' /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml
    when: "'master' in group_names"
    ignore_errors: True

  - name: Configure htpasswd for authentication
    htpasswd:
      path: '/etc/origin/master/htpasswd'
      name: "{{ ocpuser }}"
      password: "{{ ocppass }}"
    when: "'master' in group_names"

  - name: set htpasswd user up as a cluster-admin
    shell: 'oadm policy add-cluster-role-to-user cluster-admin admin'
    when: "'master' in group_names"
