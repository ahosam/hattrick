#!/usr/bin/bash

#Parameters
user=operator
password=Redhat1993
email=operator@redhat.com
tenant=operators
externalNetwork=public
externalCidr='172.16.21.0/24'
externalGateway='172.16.21.1'
externalDns='172.16.21.15'
externalFipStart='172.16.21.30'
externalFipEnd='172.16.21.199'
tenantNetwork=private
tenantCidr='192.168.0.0/24'
keypairName=operator
keypairPubkey="{{ rhosp_overcloud.operator_pub_key }}"

unset OS_PROJECT_NAME
unset OS_TENANT_NAME

#Start as the admin user
source /home/stack/overcloudrc

#Create the operators tenant and operator user defined above
openstack project create $tenant --description "Project intended for shared resources and testing by Operators" --enable
openstack user create $user --project $tenant --password $password --email $email --enable

#Grant the admin role to the operator admin
openstack role add admin --user $user --project $tenant

#create an rc file for the new operator user
cp /home/stack/overcloudrc /home/stack/${user}rc
sed -i "s/\(OS_USERNAME=\).*/\1${user}/" /home/stack/${user}rc
sed -i "s/\(OS_TENANT_NAME=\).*/\1${tenant}/" /home/stack/${user}rc
sed -i "s/\(OS_PROJECT_NAME=\).*/\1${tenant}/" /home/stack/${user}rc
sed -i "s/\(OS_PASSWORD=\).*/\1${password}/" /home/stack/${user}rc

#Switch to the new operator
source /home/stack/${user}rc

#Add ICMP and SSH incoming rules to the default security group in operators tenant
openstack security group rule create default --protocol icmp
openstack security group rule create default --protocol tcp
openstack security group rule create default --protocol udp

#Create a temp public key file
echo $keypairPubkey > /tmp/${keypairName}.pub
#Import the public key for the operator user
nova keypair-add --pub-key /tmp/${keypairName}.pub $keypairName

#Create a base flavor for use later
openstack flavor create --id 1 --ram 512 --disk 1 --vcpus 1 --public m1.tiny
openstack flavor create --id 2 --ram 1024 --disk 10 --vcpus 1 --public m1.small
openstack flavor create --id 3 --ram 2048 --disk 20 --vcpus 2 --public m1.medium
openstack flavor create --id 4 --ram 4096 --disk 40 --vcpus 4 --public m1.large
openstack flavor create --id 5 --ram 8192 --disk 80 --vcpus 8 --public m1.xlarge
openstack flavor create --id 6 --ram 12288 --disk 80 --vcpus 4 --public cf.min
openstack flavor create --id 7 --ram 16834 --disk 40 --vcpus 2 --public ocp1.master
openstack flavor create --id 8 --ram 8192 --disk 40 --vcpus 2 --public ocp1.node
openstack flavor create --id 9 --ram 12288 --disk 80 --vcpus 4 --public sat6.min

#Create shared external network via flat provider type
neutron net-create $externalNetwork --provider:network_type vlan --provider:segmentation_id 11 --provider:physical_network datacentre --shared --router:external 

#Create external subnet
neutron subnet-create $externalNetwork $externalCidr --name ${externalNetwork}-sub --disable-dhcp --allocation-pool=start=$externalFipStart,end=$externalFipEnd --gateway=$externalGateway --dns-nameserver $externalDns

#Create a private tenant vxlan network
neutron net-create $tenantNetwork

#Create private tenant subnet
neutron subnet-create $tenantNetwork $tenantCidr --name ${tenantNetwork}-sub --dns-nameserver $externalDns

#Create provider networks
#Provisioning
neutron net-create provisioning --provider:network_type flat  --provider:physical_network prov
neutron subnet-create provisioning 172.16.20.0/24 --name provisioning-sub --allocation-pool=start=172.16.20.70,end=172.16.20.99 --no-gateway

#Create a router
neutron router-create router-$externalNetwork
#Add an interface on the router for the tenant network
neutron router-interface-add router-$externalNetwork ${tenantNetwork}-sub
#Set the external gateway on the new router
neutron router-gateway-set router-$externalNetwork $externalNetwork

mkdir -p /home/stack/guest-images
mount 172.16.2.10/volume1/web/install/images /home/stack/guest-images

#Cirros
glance image-create --name cirros035 --disk-format raw \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/cirros-0.3.5-x86_64-disk.img

#RHEL Cloud Images
glance image-create --name rhel74 --disk-format raw --min-disk 10 --min-ram 1024 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/rhel-server-7.4-x86_64-kvm.img

glance image-create --name rhel75 --disk-format raw --min-disk 10 --min-ram 1024 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/rhel-server-7.5-x86_64-kvm.img

glance image-create --name rhel69 --disk-format raw --min-disk 10 --min-ram 1024 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/rhel-guest-image-6.9-206.x86_64.img

glance image-create --name rhel610 --disk-format raw --min-disk 10 --min-ram 1024 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/rhel-server-6.10-beta-1-x86_64-kvm.img

#RHEL Atomic
glance image-create --name rhelatomic74 --disk-format raw --min-disk 10 --min-ram 1024 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/rhel-atomic-cloud-7.4.1-5.x86_64.img

#CentOS 7
glance image-create --name centos7 --disk-format raw --min-disk 10 --min-ram 1024 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/CentOS-7-x86_64-GenericCloud.img

#Sahara Apache Spark
glance image-create --name spark160 --disk-format raw --min-disk 10 --min-ram 1024 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/sahara-newton-spark-1.6.0-ubuntu.img

#CloudForms
glance image-create --name cf46 --disk-format raw --min-disk 40 --min-ram 12288 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/cfme-rhos-5.9.1.2-1.x86_64.img

#Windows Server 2012r2 Cloud Image
glance image-create --name win2012r2 --disk-format raw --min-disk 40 --min-ram 4096 \
  --container-format bare --visibility public --progress --file /home/stack/guest-images/windows_server_2012_r2_standard_eval_kvm_20151021.img
