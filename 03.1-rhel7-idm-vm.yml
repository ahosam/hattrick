- hosts: localhost
  name: playbook create IDM VM
  remote_user: kejones
  become: yes
  vars:
    idm_public_ip: 192.168.0.4
  tasks:
  - name: create idm operating system disk
    command: "qemu-img create -f qcow2 /var/lib/libvirt/images/idm-os.qcow2 80G"

  - name: push rhel 7 guest onto idm operating system disk
    command: "virt-resize --expand /dev/sda1 /var/lib/libvirt/images/rhel-guest-image-7.qcow2 /var/lib/libvirt/images/idm-os.qcow2"

  - name: create the ifcfg-eth0 file for idm
    template:
      src: templates/idm-ifcfg-eth0.j2
      dest: files/idm-ifcfg-eth0
    delegate_to: localhost

  - name: copy over the eth0 config file for IDM
    copy:
      src: "files/idm-ifcfg-eth0"
      dest: "/root/ifcfg-eth0"

  - name: copy eth0 config into IDM disk
    command: "virt-copy-in -a /var/lib/libvirt/images/idm-os.qcow2 /root/ifcfg-eth0 /etc/sysconfig/network-scripts/"

  - name: create xml for IDM vm
    #command: "virt-install --ram 4096 --vcpus 1 --os-variant rhel7 --disk path=/var/lib/libvirt/images/idm-os.qcow2,device=disk,bus=virtio,format=qcow2 --noautoconsole --vnc --network bridge:br2 --network bridge:br1 --name idm --cpu host --dry-run --print-xml"
    command: "virt-install --ram 4096 --vcpus 1 --os-variant rhel7 --disk path=/var/lib/libvirt/images/idm-os.qcow2,device=disk,bus=virtio,format=qcow2 --noautoconsole --vnc --network network:external --name idm --cpu host --dry-run --print-xml"
    register: idm_xml_content

  - name: save output of IDM XML to /tmp/idm.xml
    copy:
      content: "{{ idm_xml_content.stdout }}"
      dest: /tmp/idm.xml

  - name: define idm vm
    become: yes
    virt:
      name: "idm"
      command: define
      xml: "{{ idm_xml_content.stdout }}"
      uri: qemu:///system

  - name: start up IDM vm
    command: "virsh start idm"

  - name: waiting for IDM to come online
    wait_for:
      host: "{{ idm_public_ip }}"
      state: started
      delay: 10
      connect_timeout: 5
      timeout: 300
      port: 22
    delegate_to: 127.0.0.1
    become: false
    ignore_errors: true

- hosts: rhel_idm
  name: add authorized keys to IDM
  remote_user: root
  vars:
    ansible_ssh_user: root
    ansible_ssh_pass: redhat
  tasks:
  - name: add authorized key for root@kvm
    authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', 'files/kvm_root_id_rsa.pub') }}"

  - name: add authorized key from machine running this playbook
    authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
