---
- hosts: rhel_idm
  name: play to check on IDM
  gather_facts: false
  remote_user: root
  tasks:
  - name: waiting for IDM to be online
    wait_for:
      host: "{{ inventory_hostname }}"
      state: started
      connect_timeout: 5
      timeout: 300
      port: 22
    delegate_to: 127.0.0.1
    become: false

- hosts: rhosp_director
  name: playbook to startup all systems and services
  gather_facts: false
  remote_user: root
  become_user: stack
  tasks:
  - name: waiting for Undercloud to be online
    wait_for:
      host: "{{ inventory_hostname }}"
      state: started
      connect_timeout: 5
      timeout: 300
      port: 22
    delegate_to: 127.0.0.1
    become: false

  - name: get ironic node names for overcloud hosts
    become: yes
    become_user: stack
    shell: "source /home/stack/stackrc && openstack baremetal node list -c Name --format value"
    register: overcloud_host_node_names

  - name: poweron overcloud hosts
    become: yes
    become_user: stack
    shell: "source /home/stack/stackrc && ironic node-set-power-state {{ item }} on"
    with_items:
      - "{{ overcloud_host_node_names.stdout_lines }}"

  - name: get provisioning IPs for overcloud hosts
    become: yes
    become_user: stack
    shell: "source /home/stack/stackrc && openstack server list -c Networks --format value | cut -d = -f 2"
    register: overcloud_host_prov_ips

  - name: waiting for overcloud hosts to poweron
    wait_for:
      host: "{{ item }}"
      state: started
      connect_timeout: 5
      timeout: 300
      port: 22
    delegate_to: 127.0.0.1
    become: false
    ignore_errors: true
    with_items:
      - "{{ overcloud_host_prov_ips.stdout_lines }}"

  - name: waiting for horizon to come online
    wait_for:
      host: "{{ networks.external.dhcpStart }}"
      state: started
      delay: 10
      connect_timeout: 5
      timeout: 300
      port: 80
    delegate_to: 127.0.0.1
    become: false

- hosts: rhel_kvm
  name: play to start OpenStack instances
  gather_facts: false
  remote_user: root
  tasks:
  - name: Authenticate to the cloud and retrieve the service catalog
    os_auth:
      auth:
        auth_url: "{{ osp_url }}"
        username: "{{ osp_user }}"
        password: "{{ osp_pass }}"
        project_name: "{{ osp_project }}"

  - name: get list of openstack projects
    os_project_facts:
      auth:
        auth_url: "{{ osp_url }}"
        username: "{{ osp_user }}"
        password: "{{ osp_pass }}"
        project_name: "{{ osp_project }}"

  - name: get list of instances per project
    os_server_facts:
      auth:
        auth_url: "{{ osp_url }}"
        username: "{{ osp_user }}"
        password: "{{ osp_pass }}"
        project_name: "{{ osp_project }}"
    with_items:
      - "{{ openstack_projects }}"
  
  - name: start all instances in each project
    os_server_action:
      action: start
      auth:
        auth_url: "{{ osp_url }}"
        username: "{{ osp_user }}"
        password: "{{ osp_pass }}"
        project_name: "{{ osp_project }}"
      server: "{{ item.name }}"
      timeout: 200
    with_items:
      - "{{ openstack_servers }}"
